#indexing
coll=/c/code_mix_data/final_corpus/splitfiles
#coll=C:/research/codemixed/data/small/

#Simple keyword check to determine if code mixed or not...

codemix.keywords=C:\\Users\\AYANAVA\\Documents\\NetBeansProjects\\codemixir\\codemix_words.txt

index= C:\\Users\\AYANAVA\\Documents\\NetBeansProjects\\codemixir\\var\\index\\codemixed\\single.index\\

stopfile= C:\\Users\\AYANAVA\\Documents\\NetBeansProjects\\codemixir\\stop.txt

stem=true

#read the 'index' and split into two placed in output folders

splitindex.pure=C:\\Users\\AYANAVA\\Documents\\NetBeansProjects\\codemixir\\var\\index\\codemixed\\index.pure

splitindex.mixed=C:\\Users\\AYANAVA\\Documents\\NetBeansProjects\\codemixir\\var\\index\\codemixed\\index.mixed

#num times a term needs to appear at min. to be considered for #sampling

sampling.outfile= C:\\Users\\AYANAVA\\Documents\\NetBeansProjects\\Web\\output.txt

#sampling.outfile=C:/research/codemixed/data/querysamples/test.txt

sampling.df_threshold=20

# whether to retrieve from a ccombined index
# or to retrieve from two separate indexes (one for pure one for mixed)
#retrieve.combined_index=false
retrieve.combined_index=true

#whether to use cluster (code_mixed/pure type) collection frequencies
#(this is only applicable for the combined_index mode) in addition to the whole
#collection frequencies

index.cluster=C:\\Users\\AYANAVA\\Documents\\NetBeansProjects\\codemixir\\var\\index\\codemixed\\clustered.index
retrieve.cluster=true

retrievability.nretrieve=100
retrievability.c=10
retrievability.outdir=C:\\Users\\AYANAVA\\Documents\\NetBeansProjects\\codemixir\\output
